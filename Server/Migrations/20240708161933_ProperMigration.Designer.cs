// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240708161933_ProperMigration")]
    partial class ProperMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Server.Models.Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoPeople")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EndTime = new DateTime(2021, 9, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Math 101",
                            NoPeople = 30,
                            Room = "Room 101",
                            StartTime = new DateTime(2021, 9, 1, 9, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            EndTime = new DateTime(2021, 9, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "History 101",
                            NoPeople = 25,
                            Room = "Room 102",
                            StartTime = new DateTime(2021, 9, 1, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            EndTime = new DateTime(2021, 9, 1, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Science 101",
                            NoPeople = 20,
                            Room = "Room 103",
                            StartTime = new DateTime(2021, 9, 1, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Server.Models.ClassList", b =>
                {
                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.HasKey("PersonID", "ClassID");

                    b.HasIndex("ClassID");

                    b.ToTable("ClassList");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            ClassID = 1
                        },
                        new
                        {
                            PersonID = 1,
                            ClassID = 2
                        },
                        new
                        {
                            PersonID = 2,
                            ClassID = 2
                        },
                        new
                        {
                            PersonID = 3,
                            ClassID = 1
                        },
                        new
                        {
                            PersonID = 3,
                            ClassID = 3
                        });
                });

            modelBuilder.Entity("Server.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Present")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "john.doe@example.com",
                            Name = "John Doe",
                            Present = true
                        },
                        new
                        {
                            ID = 2,
                            Email = "jane.smith@example.com",
                            Name = "Jane Smith",
                            Present = false
                        },
                        new
                        {
                            ID = 3,
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            Present = true
                        });
                });

            modelBuilder.Entity("Server.Models.ClassList", b =>
                {
                    b.HasOne("Server.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
